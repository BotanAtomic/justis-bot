{"version":3,"sources":["languages.js","App.js","index.js"],"names":["languages","PoliceBubble","value","className","size","UserBubble","defaultValue","callback","isLast","listening","start","stop","transcript","useState","setValue","useEffect","onChange","e","target","onClick","questions","App","lang","setLang","step","setStep","useSpeechRecognition","resetTranscript","isMicrophoneAvailable","alert","name","map","l","src","Array","fill","a","i","length","Math","min","SpeechRecognition","startListening","continuous","language","stopListening","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.209192d2.chunk.js","sourcesContent":["export const languages =\n    [['Afrikaans',       ['af-ZA']],\n        ['Bahasa Indonesia',['id-ID']],\n        ['Bahasa Melayu',   ['ms-MY']],\n        ['Català',          ['ca-ES']],\n        ['Čeština',         ['cs-CZ']],\n        ['Deutsch',         ['de-DE']],\n        ['English',         ['en-AU', 'Australia'],\n            ['en-CA', 'Canada'],\n            ['en-IN', 'India'],\n            ['en-NZ', 'New Zealand'],\n            ['en-ZA', 'South Africa'],\n            ['en-GB', 'United Kingdom'],\n            ['en-US', 'United States']],\n        ['Español',         ['es-AR', 'Argentina'],\n            ['es-BO', 'Bolivia'],\n            ['es-CL', 'Chile'],\n            ['es-CO', 'Colombia'],\n            ['es-CR', 'Costa Rica'],\n            ['es-EC', 'Ecuador'],\n            ['es-SV', 'El Salvador'],\n            ['es-ES', 'España'],\n            ['es-US', 'Estados Unidos'],\n            ['es-GT', 'Guatemala'],\n            ['es-HN', 'Honduras'],\n            ['es-MX', 'México'],\n            ['es-NI', 'Nicaragua'],\n            ['es-PA', 'Panamá'],\n            ['es-PY', 'Paraguay'],\n            ['es-PE', 'Perú'],\n            ['es-PR', 'Puerto Rico'],\n            ['es-DO', 'República Dominicana'],\n            ['es-UY', 'Uruguay'],\n            ['es-VE', 'Venezuela']],\n        ['Euskara',         ['eu-ES']],\n        ['Français',        ['fr-FR']],\n        ['Galego',          ['gl-ES']],\n        ['Hrvatski',        ['hr_HR']],\n        ['IsiZulu',         ['zu-ZA']],\n        ['Íslenska',        ['is-IS']],\n        ['Italiano',        ['it-IT', 'Italia'],\n            ['it-CH', 'Svizzera']],\n        ['Magyar',          ['hu-HU']],\n        ['Nederlands',      ['nl-NL']],\n        ['Norsk bokmål',    ['nb-NO']],\n        ['Polski',          ['pl-PL']],\n        ['Português',       ['pt-BR', 'Brasil'],\n            ['pt-PT', 'Portugal']],\n        ['Română',          ['ro-RO']],\n        ['Slovenčina',      ['sk-SK']],\n        ['Suomi',           ['fi-FI']],\n        ['Svenska',         ['sv-SE']],\n        ['Türkçe',          ['tr-TR']],\n        ['български',       ['bg-BG']],\n        ['Pусский',         ['ru-RU']],\n        ['Српски',          ['sr-RS']],\n        ['한국어',            ['ko-KR']],\n        ['中文',             ['cmn-Hans-CN', '普通话 (中国大陆)'],\n            ['cmn-Hans-HK', '普通话 (香港)'],\n            ['cmn-Hant-TW', '中文 (台灣)'],\n            ['yue-Hant-HK', '粵語 (香港)']],\n        ['日本語',           ['ja-JP']],\n        ['Lingua latīna',   ['la']]];\n","import {BsCheckLg, BsFillMicFill, BsMicMuteFill} from \"react-icons/bs\";\nimport {useEffect, useState} from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport {GrUser, GrUserPolice} from \"react-icons/gr\";\nimport {languages} from \"./languages\";\nconst PoliceBubble = ({value}) => {\n    return (\n        <div className={\"relative w-2/3 flex items-center justify-center space-x-4\"}>\n            <GrUserPolice size={24}/>\n            <span className={\"w-full pl-12 h-auto flex items-center pr-8 outline-none rounded-3xl border-2 content-none overflow-hidden\"}>\n                {value}\n            </span>\n        </div>\n    )\n}\n\nconst UserBubble = ({defaultValue = \"\",callback, isLast, listening, start, stop, transcript}) => {\n    const [value, setValue] = useState(defaultValue);\n\n    useEffect(() => {\n        if(isLast) {\n            setValue(transcript)\n        }\n    }, [isLast, transcript])\n\n    return (\n        <div className={\"relative w-2/3 flex items-center justify-center space-x-4\"}>\n            {defaultValue &&\n            <span className={\"w-full pl-12 h-auto flex items-center pr-8 outline-none rounded-3xl border-2 content-none overflow-hidden\"}>\n                {defaultValue}\n            </span>}\n            {!defaultValue && <textarea className={\"w-full pl-4 pr-8 outline-none rounded-3xl border-2 content-none overflow-hidden\"}\n                      value={value} onChange={(e) => isLast && setValue(e.target.value)}/>}\n            <GrUser size={24}/>\n\n            {listening && isLast && <BsFillMicFill className={\"absolute right-20 top-1/2 transform -translate-y-1/2 text-green-900\"}\n                                        onClick={stop} size={24}/>}\n            {!listening && isLast &&  <BsMicMuteFill className={\"absolute right-20 top-1/2 transform -translate-y-1/2 text-red-900\"}\n                                         onClick={start} size={24}/>}\n            {value && isLast && <BsCheckLg className={\"absolute right-12 top-1/2 transform -translate-y-1/2 text-green-900\"}\n                                           size={24} onClick={callback}/> }\n        </div>\n    )\n}\n\nvar questions = [\n    \"Bonjour, je vais vous aider dans votre démarche. Dans quelle ville souhaitez vous déposer votre plainte? Servez-vous des commandes ci-dessous pour interagir...\",\n    \"Déposez-vous votre plainte en tant que victime, représentant légal d'une personne morale ou bien représentant légal d'une personne physique?\",\n    \"Pouvez-vous me donner vos noms et prénoms ?\",\n    \"Quels sont les faits dont vous avez été victime ? Une atteinte aux biens ou bien des faits discriminatoires?\",\n    \"Pouvez-vous décrire les faits?\",\n    \"Merci. Votre plainte a été enregistrée. Nous revenons vers vous dans les plus brefs délais.\"\n];\n\nfunction App() {\n\n    const [lang, setLang] = useState('fr-FR')\n    const [step, setStep] = useState(1);\n\n    const {\n        transcript,\n        listening,\n        resetTranscript,\n        isMicrophoneAvailable\n    } = useSpeechRecognition();\n\n    useEffect(() => {\n        if(!isMicrophoneAvailable) {\n            alert(\"You must enable microphone permission\")\n        }\n    }, [isMicrophoneAvailable])\n\n    return (\n        <div className={\"flex flex-col w-full h-full overflow-y-auto relative\"}>\n\n            <div className={\"absolute top-0 right-0\"}>\n                <select name={\"languages\"} value={lang} onChange={(e) => setLang(e.target.value)}>\n                    {languages.map((l) => (\n                        <option value={l[1][0]}>{l[0]}</option>\n                    ))}\n                </select>\n            </div>\n\n            <div className={\"flex flex-col items-center justify-center w-full\"}>\n                <img src={\"logo.png\"} />\n                <span className={\"text-2xl text-gray-700 font-bold\"}>J.U.S.T.I.S</span>\n\n                <span className={\"text-2xl text-gray-600 font-bold pt-4\"}>Assistance Plainte</span>\n                <span className={\"text-xl lg:px-0 lg:w-1/4 md:w-48 md:px-4 text-center text-gray-600 font-semibold pb-8\"}>\n                    Dans tous les cas d'urgence, appelez immédiatement par téléphone le <b>17</b> ou le <b>112</b>\n                </span>\n\n\n                <div className={\"w-full flex flex-col items-center justify-center space-y-4\"}>\n                    {Array(step).fill(0).map((a, i) => (\n                        <>\n                            <PoliceBubble value={questions[i]}/>\n                            {i < questions.length - 1 && <UserBubble\n                                callback={() => {\n                                    resetTranscript()\n                                    setStep((a) => Math.min(a + 1, questions.length));\n                                }}\n                                start={() => SpeechRecognition.startListening({continuous: false, language: lang})}\n                                stop={SpeechRecognition.stopListening}\n                                listening={listening}\n                                isLast={i === step - 1}\n                                transcript={transcript}\n                            />}\n                        </>\n                    ))}\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport \"./index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}